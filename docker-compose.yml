services:
  router1:
    image: router_image
    #entrypoint: tail
    #command: -f
    environment:
      - AES_NUM=3
      - TARGET_SERVER_ADDRESS=router2
      - PYTHONUNBUFFERED=1
    volumes:
      - ./:/app
    ports:
      - 2001:2001
    networks:
      my_network:
        #ipv4_address:

  router2:
    image: router_image
    #entrypoint: tail
    #command: -f
    environment: 
      - AES_NUM=2
      - TARGET_SERVER_ADDRESS=router3
      - PYTHONUNBUFFERED=1
    volumes:
      - ./:/app
    networks:
      my_network:
        #ipv4_address:

  router3:
    image: router_image
    #entrypoint: tail
    #command: -f
    environment: 
      - AES_NUM=1
      - TARGET_SERVER_ADDRESS=server
      - PYTHONUNBUFFERED=1
    volumes:
      - ./:/app
    networks:
      my_network:
        #ipv4_address:
  sender:
    image: router_image
    volumes:
      - ./:/app
    entrypoint: tail
    command: -f
    networks:
      my_network:
        #ipv4_address:

  server:
    image: router_image
    environment: 
      - PYTHONUNBUFFERED=1
    command: python server.py
    volumes:
      - ./:/app
    #ports:
    #  - 2223:2223
    networks:
      my_network:
        #ipv4_address: 192.168.10.20

  app1:
    image: router_image
    command: tail -f
    volumes:
      - ./:/app
    networks:
      my_network:
        #ipv4_address: 192.168.1.2

  app2:
    image: router_image
    command: tail -f
    volumes:
      - ./:/app
    networks:
      my_network:
        #ipv4_address: 192.168.1.2
          #  app2:
          #    image: nginx
          #    networks:
          #      my_network:
          #        ipv4_address: 192.168.1.3
          #
          #  app3:
          #    image: nginx
          #    networks:
          #      my_network:
          #        ipv4_address: 192.168.1.4

networks:
  my_network:
    driver: bridge
      #    ipam:
      #      config:
      #        - subnet: 192.168.1.0/24

